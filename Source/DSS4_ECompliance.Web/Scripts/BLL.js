// Copyright (c) CLMS. All rights reserved.
// Licensed under the AGPL-3.0 license. See LICENSE file in the project root for full license information.
// This source file was autogenerated by zAppDev(r).
var DSS4_ECompliance;
(function (DSS4_ECompliance) {
    var BO;
    (function (BO) {
        var Domain_LocalResourcesDefinition = (function () {
            function Domain_LocalResourcesDefinition() {
                this._originalTypeClassName = "DSS4_ECompliance.BO.Domain_LocalResourcesDefinition";
                this.Domain = DSS4_ECompliance.BO;
            }
            return Domain_LocalResourcesDefinition;
        }());
        BO.Domain_LocalResourcesDefinition = Domain_LocalResourcesDefinition;
        var tblCustomsFinder = (function () {
            function tblCustomsFinder() {
                this._originalTypeClassName = "DSS4_ECompliance.BO.tblCustomsFinder";
                this.Domain = DSS4_ECompliance.BO;
                this['_key'] = this.FinderID = 0;
            }
            tblCustomsFinder.IsNew = function ($this) {
                if ($this == null)
                    return true;
                return $this.FinderID == null || $this.FinderID == 0;
            };
            return tblCustomsFinder;
        }());
        BO.tblCustomsFinder = tblCustomsFinder;
        var tblCustomsOveralMonitoring = (function () {
            function tblCustomsOveralMonitoring() {
                this._originalTypeClassName = "DSS4_ECompliance.BO.tblCustomsOveralMonitoring";
                this.Domain = DSS4_ECompliance.BO;
                this['_key'] = this.MonitoringID = 0;
            }
            tblCustomsOveralMonitoring.IsNew = function ($this) {
                if ($this == null)
                    return true;
                return $this.MonitoringID == null || $this.MonitoringID == 0;
            };
            return tblCustomsOveralMonitoring;
        }());
        tblCustomsOveralMonitoring.settblCustomsFinder = function ($this, value) {
            var oldValue = $this.tblCustomsFinder;
            $this.tblCustomsFinder = value;
            if (value != null) {
            }
        };
        BO.tblCustomsOveralMonitoring = tblCustomsOveralMonitoring;
        var tblCustomsWayPointRisk = (function () {
            function tblCustomsWayPointRisk() {
                this._originalTypeClassName = "DSS4_ECompliance.BO.tblCustomsWayPointRisk";
                this.Domain = DSS4_ECompliance.BO;
                this['_key'] = this.WaypointriskID = 0;
            }
            tblCustomsWayPointRisk.IsNew = function ($this) {
                if ($this == null)
                    return true;
                return $this.WaypointriskID == null || $this.WaypointriskID == 0;
            };
            return tblCustomsWayPointRisk;
        }());
        tblCustomsWayPointRisk.settblCustomsWayPoint = function ($this, value) {
            var oldValue = $this.tblCustomsWayPoint;
            $this.tblCustomsWayPoint = value;
            if (value != null) {
            }
        };
        BO.tblCustomsWayPointRisk = tblCustomsWayPointRisk;
        var tblCustomsWayPointVisibility = (function () {
            function tblCustomsWayPointVisibility() {
                this._originalTypeClassName = "DSS4_ECompliance.BO.tblCustomsWayPointVisibility";
                this.Domain = DSS4_ECompliance.BO;
                this['_key'] = this.WayPointVisibilityID = 0;
            }
            tblCustomsWayPointVisibility.IsNew = function ($this) {
                if ($this == null)
                    return true;
                return $this.WayPointVisibilityID == null || $this.WayPointVisibilityID == 0;
            };
            return tblCustomsWayPointVisibility;
        }());
        tblCustomsWayPointVisibility.settblCustomsWayPoint = function ($this, value) {
            var oldValue = $this.tblCustomsWayPoint;
            $this.tblCustomsWayPoint = value;
            if (value != null) {
            }
        };
        BO.tblCustomsWayPointVisibility = tblCustomsWayPointVisibility;
        var tblCustomsWayPoint = (function () {
            function tblCustomsWayPoint() {
                this._originalTypeClassName = "DSS4_ECompliance.BO.tblCustomsWayPoint";
                this.Domain = DSS4_ECompliance.BO;
                this['_key'] = this.Id = 0;
            }
            tblCustomsWayPoint.IsNew = function ($this) {
                if ($this == null)
                    return true;
                return $this.Id == null || $this.Id == 0;
            };
            return tblCustomsWayPoint;
        }());
        tblCustomsWayPoint.setCustomsWayPoint = function ($this, value) {
            var oldValue = $this.CustomsWayPoint;
            $this.CustomsWayPoint = value;
            if (value != null) {
            }
        };
        BO.tblCustomsWayPoint = tblCustomsWayPoint;
        var ApplicationUserAction = (function () {
            function ApplicationUserAction() {
                this._originalTypeClassName = "zAppDev.DotNet.Framework.Identity.Model.ApplicationUserAction";
                this.Domain = DSS4_ECompliance.BO;
                this['_key'] = this.Id = 0;
            }
            ApplicationUserAction.IsNew = function ($this) {
                if ($this == null)
                    return true;
                return $this.Id == null || $this.Id == 0;
            };
            return ApplicationUserAction;
        }());
        BO.ApplicationUserAction = ApplicationUserAction;
        var ApplicationUserExternalProfile = (function () {
            function ApplicationUserExternalProfile() {
                this._originalTypeClassName = "zAppDev.DotNet.Framework.Identity.Model.ApplicationUserExternalProfile";
                this.Domain = DSS4_ECompliance.BO;
                this['_key'] = this.Id = 0;
            }
            ApplicationUserExternalProfile.IsNew = function ($this) {
                if ($this == null)
                    return true;
                return $this.Id == null || $this.Id == 0;
            };
            return ApplicationUserExternalProfile;
        }());
        BO.ApplicationUserExternalProfile = ApplicationUserExternalProfile;
        var ApplicationSetting = (function () {
            function ApplicationSetting() {
                this._originalTypeClassName = "zAppDev.DotNet.Framework.Identity.Model.ApplicationSetting";
                this.Domain = DSS4_ECompliance.BO;
                this['_key'] = this.Id = 0;
            }
            ApplicationSetting.IsNew = function ($this) {
                if ($this == null)
                    return true;
                return $this.Id == null || $this.Id == 0;
            };
            return ApplicationSetting;
        }());
        BO.ApplicationSetting = ApplicationSetting;
        var ApplicationUser = (function () {
            function ApplicationUser() {
                this._originalTypeClassName = "zAppDev.DotNet.Framework.Identity.Model.ApplicationUser";
                this.Domain = DSS4_ECompliance.BO;
                this.Permissions = [];
                this.Roles = [];
                this.Clients = [];
                this.Logins = [];
                this.Claims = [];
                this['_key'] = this.UserName = "";
            }
            ApplicationUser.IsNew = function ($this) {
                if ($this == null)
                    return true;
                return $this.UserName == null || $this.UserName == "";
            };
            return ApplicationUser;
        }());
        ApplicationUser.setPermissions = function ($this, items) {
            if (items == null)
                items = [];
            if ($this.Permissions == null)
                $this.Permissions = [];
            var copyItems = Joove.Common.cloneObject(items);
            while ($this.Permissions.length > 0) {
                DSS4_ECompliance.BO.ApplicationUser.removePermissions($this, $this.Permissions[0]);
            }
            DSS4_ECompliance.BO.ApplicationUser.addManyPermissions($this, copyItems);
        };
        ApplicationUser.addManyPermissions = function ($this, items) {
            if (items == null)
                return;
            for (var i = 0; i < items.length; i++) {
                DSS4_ECompliance.BO.ApplicationUser.addPermissions($this, items[i]);
            }
        };
        ApplicationUser.addPermissions = function ($this, item) {
            if ($this.Permissions == null)
                $this.Permissions = [];
            if (item == null || $this.Permissions.indexOf(item) > -1)
                return;
            $this.Permissions.push(item);
            ApplicationPermission.addUsers(item, $this);
        };
        ApplicationUser.addRangePermissions = function ($this, items) {
            items.forEach(function (item) { return DSS4_ECompliance.BO.ApplicationUser.addPermissions($this, item); });
        };
        ApplicationUser.removePermissions = function ($this, item) {
            if ($this == null || $this.Permissions == null || $this.Permissions.indexOf(item) === -1)
                return;
            var _index = $this.Permissions.indexOf(item);
            $this.Permissions.splice(_index, 1);
            ApplicationPermission.removeUsers(item, $this);
        };
        ApplicationUser.clearPermissions = function ($this) {
            $this.Permissions = null;
        };
        ApplicationUser.setRoles = function ($this, items) {
            if (items == null)
                items = [];
            if ($this.Roles == null)
                $this.Roles = [];
            var copyItems = Joove.Common.cloneObject(items);
            while ($this.Roles.length > 0) {
                DSS4_ECompliance.BO.ApplicationUser.removeRoles($this, $this.Roles[0]);
            }
            DSS4_ECompliance.BO.ApplicationUser.addManyRoles($this, copyItems);
        };
        ApplicationUser.addManyRoles = function ($this, items) {
            if (items == null)
                return;
            for (var i = 0; i < items.length; i++) {
                DSS4_ECompliance.BO.ApplicationUser.addRoles($this, items[i]);
            }
        };
        ApplicationUser.addRoles = function ($this, item) {
            if ($this.Roles == null)
                $this.Roles = [];
            if (item == null || $this.Roles.indexOf(item) > -1)
                return;
            $this.Roles.push(item);
            ApplicationRole.addUsers(item, $this);
        };
        ApplicationUser.addRangeRoles = function ($this, items) {
            items.forEach(function (item) { return DSS4_ECompliance.BO.ApplicationUser.addRoles($this, item); });
        };
        ApplicationUser.removeRoles = function ($this, item) {
            if ($this == null || $this.Roles == null || $this.Roles.indexOf(item) === -1)
                return;
            var _index = $this.Roles.indexOf(item);
            $this.Roles.splice(_index, 1);
            ApplicationRole.removeUsers(item, $this);
        };
        ApplicationUser.clearRoles = function ($this) {
            $this.Roles = null;
        };
        ApplicationUser.setClients = function ($this, items) {
            if (items == null)
                items = [];
            if ($this.Clients == null)
                $this.Clients = [];
            var copyItems = Joove.Common.cloneObject(items);
            while ($this.Clients.length > 0) {
                DSS4_ECompliance.BO.ApplicationUser.removeClients($this, $this.Clients[0]);
            }
            DSS4_ECompliance.BO.ApplicationUser.addManyClients($this, copyItems);
        };
        ApplicationUser.addManyClients = function ($this, items) {
            if (items == null)
                return;
            for (var i = 0; i < items.length; i++) {
                DSS4_ECompliance.BO.ApplicationUser.addClients($this, items[i]);
            }
        };
        ApplicationUser.addClients = function ($this, item) {
            if ($this.Clients == null)
                $this.Clients = [];
            if (item == null || $this.Clients.indexOf(item) > -1)
                return;
            $this.Clients.push(item);
            if (item.User != $this) {
                DSS4_ECompliance.BO.ApplicationClient.setUser(item, $this);
            }
        };
        ApplicationUser.addRangeClients = function ($this, items) {
            items.forEach(function (item) { return DSS4_ECompliance.BO.ApplicationUser.addClients($this, item); });
        };
        ApplicationUser.removeClients = function ($this, item) {
            if ($this == null || $this.Clients == null || $this.Clients.indexOf(item) === -1)
                return;
            var _index = $this.Clients.indexOf(item);
            $this.Clients.splice(_index, 1);
            item.User = null;
        };
        ApplicationUser.clearClients = function ($this) {
            $this.Clients = null;
        };
        ApplicationUser.setLogins = function ($this, items) {
            if (items == null)
                items = [];
            if ($this.Logins == null)
                $this.Logins = [];
            var copyItems = Joove.Common.cloneObject(items);
            while ($this.Logins.length > 0) {
                DSS4_ECompliance.BO.ApplicationUser.removeLogins($this, $this.Logins[0]);
            }
            DSS4_ECompliance.BO.ApplicationUser.addManyLogins($this, copyItems);
        };
        ApplicationUser.addManyLogins = function ($this, items) {
            if (items == null)
                return;
            for (var i = 0; i < items.length; i++) {
                DSS4_ECompliance.BO.ApplicationUser.addLogins($this, items[i]);
            }
        };
        ApplicationUser.addLogins = function ($this, item) {
            if ($this.Logins == null)
                $this.Logins = [];
            if (item == null || $this.Logins.indexOf(item) > -1)
                return;
            $this.Logins.push(item);
            if (item.User != $this) {
                DSS4_ECompliance.BO.ApplicationUserLogin.setUser(item, $this);
            }
        };
        ApplicationUser.addRangeLogins = function ($this, items) {
            items.forEach(function (item) { return DSS4_ECompliance.BO.ApplicationUser.addLogins($this, item); });
        };
        ApplicationUser.removeLogins = function ($this, item) {
            if ($this == null || $this.Logins == null || $this.Logins.indexOf(item) === -1)
                return;
            var _index = $this.Logins.indexOf(item);
            $this.Logins.splice(_index, 1);
            item.User = null;
        };
        ApplicationUser.clearLogins = function ($this) {
            $this.Logins = null;
        };
        ApplicationUser.setClaims = function ($this, items) {
            if (items == null)
                items = [];
            if ($this.Claims == null)
                $this.Claims = [];
            var copyItems = Joove.Common.cloneObject(items);
            while ($this.Claims.length > 0) {
                DSS4_ECompliance.BO.ApplicationUser.removeClaims($this, $this.Claims[0]);
            }
            DSS4_ECompliance.BO.ApplicationUser.addManyClaims($this, copyItems);
        };
        ApplicationUser.addManyClaims = function ($this, items) {
            if (items == null)
                return;
            for (var i = 0; i < items.length; i++) {
                DSS4_ECompliance.BO.ApplicationUser.addClaims($this, items[i]);
            }
        };
        ApplicationUser.addClaims = function ($this, item) {
            if ($this.Claims == null)
                $this.Claims = [];
            if (item == null || $this.Claims.indexOf(item) > -1)
                return;
            $this.Claims.push(item);
            if (item.User != $this) {
                DSS4_ECompliance.BO.ApplicationUserClaim.setUser(item, $this);
            }
        };
        ApplicationUser.addRangeClaims = function ($this, items) {
            items.forEach(function (item) { return DSS4_ECompliance.BO.ApplicationUser.addClaims($this, item); });
        };
        ApplicationUser.removeClaims = function ($this, item) {
            if ($this == null || $this.Claims == null || $this.Claims.indexOf(item) === -1)
                return;
            var _index = $this.Claims.indexOf(item);
            $this.Claims.splice(_index, 1);
            item.User = null;
        };
        ApplicationUser.clearClaims = function ($this) {
            $this.Claims = null;
        };
        ApplicationUser.setProfile = function ($this, value) {
            var oldValue = $this.Profile;
            $this.Profile = value;
            if (value != null) {
            }
        };
        BO.ApplicationUser = ApplicationUser;
        var ApplicationRole = (function () {
            function ApplicationRole() {
                this._originalTypeClassName = "zAppDev.DotNet.Framework.Identity.Model.ApplicationRole";
                this.Domain = DSS4_ECompliance.BO;
                this.Users = [];
                this.Permissions = [];
                this['_key'] = this.Id = 0;
            }
            ApplicationRole.IsNew = function ($this) {
                if ($this == null)
                    return true;
                return $this.Id == null || $this.Id == 0;
            };
            return ApplicationRole;
        }());
        ApplicationRole.setUsers = function ($this, items) {
            if (items == null)
                items = [];
            if ($this.Users == null)
                $this.Users = [];
            var copyItems = Joove.Common.cloneObject(items);
            while ($this.Users.length > 0) {
                DSS4_ECompliance.BO.ApplicationRole.removeUsers($this, $this.Users[0]);
            }
            DSS4_ECompliance.BO.ApplicationRole.addManyUsers($this, copyItems);
        };
        ApplicationRole.addManyUsers = function ($this, items) {
            if (items == null)
                return;
            for (var i = 0; i < items.length; i++) {
                DSS4_ECompliance.BO.ApplicationRole.addUsers($this, items[i]);
            }
        };
        ApplicationRole.addUsers = function ($this, item) {
            if ($this.Users == null)
                $this.Users = [];
            if (item == null || $this.Users.indexOf(item) > -1)
                return;
            $this.Users.push(item);
            ApplicationUser.addRoles(item, $this);
        };
        ApplicationRole.addRangeUsers = function ($this, items) {
            items.forEach(function (item) { return DSS4_ECompliance.BO.ApplicationRole.addUsers($this, item); });
        };
        ApplicationRole.removeUsers = function ($this, item) {
            if ($this == null || $this.Users == null || $this.Users.indexOf(item) === -1)
                return;
            var _index = $this.Users.indexOf(item);
            $this.Users.splice(_index, 1);
            ApplicationUser.removeRoles(item, $this);
        };
        ApplicationRole.clearUsers = function ($this) {
            $this.Users = null;
        };
        ApplicationRole.setPermissions = function ($this, items) {
            if (items == null)
                items = [];
            if ($this.Permissions == null)
                $this.Permissions = [];
            var copyItems = Joove.Common.cloneObject(items);
            while ($this.Permissions.length > 0) {
                DSS4_ECompliance.BO.ApplicationRole.removePermissions($this, $this.Permissions[0]);
            }
            DSS4_ECompliance.BO.ApplicationRole.addManyPermissions($this, copyItems);
        };
        ApplicationRole.addManyPermissions = function ($this, items) {
            if (items == null)
                return;
            for (var i = 0; i < items.length; i++) {
                DSS4_ECompliance.BO.ApplicationRole.addPermissions($this, items[i]);
            }
        };
        ApplicationRole.addPermissions = function ($this, item) {
            if ($this.Permissions == null)
                $this.Permissions = [];
            if (item == null || $this.Permissions.indexOf(item) > -1)
                return;
            $this.Permissions.push(item);
            ApplicationPermission.addRoles(item, $this);
        };
        ApplicationRole.addRangePermissions = function ($this, items) {
            items.forEach(function (item) { return DSS4_ECompliance.BO.ApplicationRole.addPermissions($this, item); });
        };
        ApplicationRole.removePermissions = function ($this, item) {
            if ($this == null || $this.Permissions == null || $this.Permissions.indexOf(item) === -1)
                return;
            var _index = $this.Permissions.indexOf(item);
            $this.Permissions.splice(_index, 1);
            ApplicationPermission.removeRoles(item, $this);
        };
        ApplicationRole.clearPermissions = function ($this) {
            $this.Permissions = null;
        };
        BO.ApplicationRole = ApplicationRole;
        var ApplicationOperation = (function () {
            function ApplicationOperation() {
                this._originalTypeClassName = "zAppDev.DotNet.Framework.Identity.Model.ApplicationOperation";
                this.Domain = DSS4_ECompliance.BO;
                this.Permissions = [];
                this['_key'] = this.Id = 0;
            }
            ApplicationOperation.IsNew = function ($this) {
                if ($this == null)
                    return true;
                return $this.Id == null || $this.Id == 0;
            };
            return ApplicationOperation;
        }());
        ApplicationOperation.setPermissions = function ($this, items) {
            if (items == null)
                items = [];
            if ($this.Permissions == null)
                $this.Permissions = [];
            var copyItems = Joove.Common.cloneObject(items);
            while ($this.Permissions.length > 0) {
                DSS4_ECompliance.BO.ApplicationOperation.removePermissions($this, $this.Permissions[0]);
            }
            DSS4_ECompliance.BO.ApplicationOperation.addManyPermissions($this, copyItems);
        };
        ApplicationOperation.addManyPermissions = function ($this, items) {
            if (items == null)
                return;
            for (var i = 0; i < items.length; i++) {
                DSS4_ECompliance.BO.ApplicationOperation.addPermissions($this, items[i]);
            }
        };
        ApplicationOperation.addPermissions = function ($this, item) {
            if ($this.Permissions == null)
                $this.Permissions = [];
            if (item == null || $this.Permissions.indexOf(item) > -1)
                return;
            $this.Permissions.push(item);
            ApplicationPermission.addOperations(item, $this);
        };
        ApplicationOperation.addRangePermissions = function ($this, items) {
            items.forEach(function (item) { return DSS4_ECompliance.BO.ApplicationOperation.addPermissions($this, item); });
        };
        ApplicationOperation.removePermissions = function ($this, item) {
            if ($this == null || $this.Permissions == null || $this.Permissions.indexOf(item) === -1)
                return;
            var _index = $this.Permissions.indexOf(item);
            $this.Permissions.splice(_index, 1);
            ApplicationPermission.removeOperations(item, $this);
        };
        ApplicationOperation.clearPermissions = function ($this) {
            $this.Permissions = null;
        };
        BO.ApplicationOperation = ApplicationOperation;
        var ApplicationPermission = (function () {
            function ApplicationPermission() {
                this._originalTypeClassName = "zAppDev.DotNet.Framework.Identity.Model.ApplicationPermission";
                this.Domain = DSS4_ECompliance.BO;
                this.Users = [];
                this.Roles = [];
                this.Operations = [];
                this['_key'] = this.Id = 0;
            }
            ApplicationPermission.IsNew = function ($this) {
                if ($this == null)
                    return true;
                return $this.Id == null || $this.Id == 0;
            };
            return ApplicationPermission;
        }());
        ApplicationPermission.setUsers = function ($this, items) {
            if (items == null)
                items = [];
            if ($this.Users == null)
                $this.Users = [];
            var copyItems = Joove.Common.cloneObject(items);
            while ($this.Users.length > 0) {
                DSS4_ECompliance.BO.ApplicationPermission.removeUsers($this, $this.Users[0]);
            }
            DSS4_ECompliance.BO.ApplicationPermission.addManyUsers($this, copyItems);
        };
        ApplicationPermission.addManyUsers = function ($this, items) {
            if (items == null)
                return;
            for (var i = 0; i < items.length; i++) {
                DSS4_ECompliance.BO.ApplicationPermission.addUsers($this, items[i]);
            }
        };
        ApplicationPermission.addUsers = function ($this, item) {
            if ($this.Users == null)
                $this.Users = [];
            if (item == null || $this.Users.indexOf(item) > -1)
                return;
            $this.Users.push(item);
            ApplicationUser.addPermissions(item, $this);
        };
        ApplicationPermission.addRangeUsers = function ($this, items) {
            items.forEach(function (item) { return DSS4_ECompliance.BO.ApplicationPermission.addUsers($this, item); });
        };
        ApplicationPermission.removeUsers = function ($this, item) {
            if ($this == null || $this.Users == null || $this.Users.indexOf(item) === -1)
                return;
            var _index = $this.Users.indexOf(item);
            $this.Users.splice(_index, 1);
            ApplicationUser.removePermissions(item, $this);
        };
        ApplicationPermission.clearUsers = function ($this) {
            $this.Users = null;
        };
        ApplicationPermission.setRoles = function ($this, items) {
            if (items == null)
                items = [];
            if ($this.Roles == null)
                $this.Roles = [];
            var copyItems = Joove.Common.cloneObject(items);
            while ($this.Roles.length > 0) {
                DSS4_ECompliance.BO.ApplicationPermission.removeRoles($this, $this.Roles[0]);
            }
            DSS4_ECompliance.BO.ApplicationPermission.addManyRoles($this, copyItems);
        };
        ApplicationPermission.addManyRoles = function ($this, items) {
            if (items == null)
                return;
            for (var i = 0; i < items.length; i++) {
                DSS4_ECompliance.BO.ApplicationPermission.addRoles($this, items[i]);
            }
        };
        ApplicationPermission.addRoles = function ($this, item) {
            if ($this.Roles == null)
                $this.Roles = [];
            if (item == null || $this.Roles.indexOf(item) > -1)
                return;
            $this.Roles.push(item);
            ApplicationRole.addPermissions(item, $this);
        };
        ApplicationPermission.addRangeRoles = function ($this, items) {
            items.forEach(function (item) { return DSS4_ECompliance.BO.ApplicationPermission.addRoles($this, item); });
        };
        ApplicationPermission.removeRoles = function ($this, item) {
            if ($this == null || $this.Roles == null || $this.Roles.indexOf(item) === -1)
                return;
            var _index = $this.Roles.indexOf(item);
            $this.Roles.splice(_index, 1);
            ApplicationRole.removePermissions(item, $this);
        };
        ApplicationPermission.clearRoles = function ($this) {
            $this.Roles = null;
        };
        ApplicationPermission.setOperations = function ($this, items) {
            if (items == null)
                items = [];
            if ($this.Operations == null)
                $this.Operations = [];
            var copyItems = Joove.Common.cloneObject(items);
            while ($this.Operations.length > 0) {
                DSS4_ECompliance.BO.ApplicationPermission.removeOperations($this, $this.Operations[0]);
            }
            DSS4_ECompliance.BO.ApplicationPermission.addManyOperations($this, copyItems);
        };
        ApplicationPermission.addManyOperations = function ($this, items) {
            if (items == null)
                return;
            for (var i = 0; i < items.length; i++) {
                DSS4_ECompliance.BO.ApplicationPermission.addOperations($this, items[i]);
            }
        };
        ApplicationPermission.addOperations = function ($this, item) {
            if ($this.Operations == null)
                $this.Operations = [];
            if (item == null || $this.Operations.indexOf(item) > -1)
                return;
            $this.Operations.push(item);
            ApplicationOperation.addPermissions(item, $this);
        };
        ApplicationPermission.addRangeOperations = function ($this, items) {
            items.forEach(function (item) { return DSS4_ECompliance.BO.ApplicationPermission.addOperations($this, item); });
        };
        ApplicationPermission.removeOperations = function ($this, item) {
            if ($this == null || $this.Operations == null || $this.Operations.indexOf(item) === -1)
                return;
            var _index = $this.Operations.indexOf(item);
            $this.Operations.splice(_index, 1);
            ApplicationOperation.removePermissions(item, $this);
        };
        ApplicationPermission.clearOperations = function ($this) {
            $this.Operations = null;
        };
        BO.ApplicationPermission = ApplicationPermission;
        var ApplicationClient = (function () {
            function ApplicationClient() {
                this._originalTypeClassName = "zAppDev.DotNet.Framework.Identity.Model.ApplicationClient";
                this.Domain = DSS4_ECompliance.BO;
                this.User = new this.Domain.ApplicationUser();
                this['_key'] = this.Id = 0;
            }
            ApplicationClient.IsNew = function ($this) {
                if ($this == null)
                    return true;
                return $this.Id == null || $this.Id == 0;
            };
            return ApplicationClient;
        }());
        ApplicationClient.setUser = function ($this, value) {
            var oldValue = $this.User;
            $this.User = value;
            if (value != null) {
                if (oldValue != null) {
                    DSS4_ECompliance.BO.ApplicationUser.removeClients(oldValue, $this);
                }
                DSS4_ECompliance.BO.ApplicationUser.addClients(value, $this);
            }
        };
        BO.ApplicationClient = ApplicationClient;
        var ApplicationUserLogin = (function () {
            function ApplicationUserLogin() {
                this._originalTypeClassName = "zAppDev.DotNet.Framework.Identity.Model.ApplicationUserLogin";
                this.Domain = DSS4_ECompliance.BO;
                this.User = new this.Domain.ApplicationUser();
                this['_key'] = this.Id = 0;
            }
            ApplicationUserLogin.IsNew = function ($this) {
                if ($this == null)
                    return true;
                return $this.Id == null || $this.Id == 0;
            };
            return ApplicationUserLogin;
        }());
        ApplicationUserLogin.setUser = function ($this, value) {
            var oldValue = $this.User;
            $this.User = value;
            if (value != null) {
                if (oldValue != null) {
                    DSS4_ECompliance.BO.ApplicationUser.removeLogins(oldValue, $this);
                }
                DSS4_ECompliance.BO.ApplicationUser.addLogins(value, $this);
            }
        };
        BO.ApplicationUserLogin = ApplicationUserLogin;
        var ApplicationUserClaim = (function () {
            function ApplicationUserClaim() {
                this._originalTypeClassName = "zAppDev.DotNet.Framework.Identity.Model.ApplicationUserClaim";
                this.Domain = DSS4_ECompliance.BO;
                this.User = new this.Domain.ApplicationUser();
                this['_key'] = this.Id = 0;
            }
            ApplicationUserClaim.IsNew = function ($this) {
                if ($this == null)
                    return true;
                return $this.Id == null || $this.Id == 0;
            };
            return ApplicationUserClaim;
        }());
        ApplicationUserClaim.setUser = function ($this, value) {
            var oldValue = $this.User;
            $this.User = value;
            if (value != null) {
                if (oldValue != null) {
                    DSS4_ECompliance.BO.ApplicationUser.removeClaims(oldValue, $this);
                }
                DSS4_ECompliance.BO.ApplicationUser.addClaims(value, $this);
            }
        };
        BO.ApplicationUserClaim = ApplicationUserClaim;
        var ProfileSetting = (function () {
            function ProfileSetting() {
                this._originalTypeClassName = "zAppDev.DotNet.Framework.Identity.Model.ProfileSetting";
                this.Domain = DSS4_ECompliance.BO;
                this['_key'] = this.Id = 0;
            }
            ProfileSetting.IsNew = function ($this) {
                if ($this == null)
                    return true;
                return $this.Id == null || $this.Id == 0;
            };
            return ProfileSetting;
        }());
        ProfileSetting.setParentProfile = function ($this, value) {
            var oldValue = $this.ParentProfile;
            $this.ParentProfile = value;
            if (value != null) {
                if (oldValue != null) {
                    DSS4_ECompliance.BO.Profile.removeSettings(oldValue, $this);
                }
                DSS4_ECompliance.BO.Profile.addSettings(value, $this);
            }
        };
        BO.ProfileSetting = ProfileSetting;
        var Profile = (function () {
            function Profile() {
                this._originalTypeClassName = "zAppDev.DotNet.Framework.Identity.Model.Profile";
                this.Domain = DSS4_ECompliance.BO;
                this.Settings = [];
                this['_key'] = this.Id = 0;
            }
            Profile.IsNew = function ($this) {
                if ($this == null)
                    return true;
                return $this.Id == null || $this.Id == 0;
            };
            return Profile;
        }());
        Profile.setSettings = function ($this, items) {
            if (items == null)
                items = [];
            if ($this.Settings == null)
                $this.Settings = [];
            var copyItems = Joove.Common.cloneObject(items);
            while ($this.Settings.length > 0) {
                DSS4_ECompliance.BO.Profile.removeSettings($this, $this.Settings[0]);
            }
            DSS4_ECompliance.BO.Profile.addManySettings($this, copyItems);
        };
        Profile.addManySettings = function ($this, items) {
            if (items == null)
                return;
            for (var i = 0; i < items.length; i++) {
                DSS4_ECompliance.BO.Profile.addSettings($this, items[i]);
            }
        };
        Profile.addSettings = function ($this, item) {
            if ($this.Settings == null)
                $this.Settings = [];
            if (item == null || $this.Settings.indexOf(item) > -1)
                return;
            $this.Settings.push(item);
            if (item.ParentProfile != $this) {
                DSS4_ECompliance.BO.ProfileSetting.setParentProfile(item, $this);
            }
        };
        Profile.addRangeSettings = function ($this, items) {
            items.forEach(function (item) { return DSS4_ECompliance.BO.Profile.addSettings($this, item); });
        };
        Profile.removeSettings = function ($this, item) {
            if ($this == null || $this.Settings == null || $this.Settings.indexOf(item) === -1)
                return;
            var _index = $this.Settings.indexOf(item);
            $this.Settings.splice(_index, 1);
            item.ParentProfile = null;
        };
        Profile.clearSettings = function ($this) {
            $this.Settings = null;
        };
        BO.Profile = Profile;
        var ApplicationLanguage = (function () {
            function ApplicationLanguage() {
                this._originalTypeClassName = "zAppDev.DotNet.Framework.Identity.Model.ApplicationLanguage";
                this.Domain = DSS4_ECompliance.BO;
                this['_key'] = this.Id = 0;
            }
            ApplicationLanguage.IsNew = function ($this) {
                if ($this == null)
                    return true;
                return $this.Id == null || $this.Id == 0;
            };
            return ApplicationLanguage;
        }());
        ApplicationLanguage.setDateTimeFormat = function ($this, value) {
            var oldValue = $this.DateTimeFormat;
            $this.DateTimeFormat = value;
            if (value != null) {
                if (oldValue != null && oldValue.ApplicationLanguage != null) {
                    oldValue.ApplicationLanguage = null;
                }
                if ($this.DateTimeFormat.ApplicationLanguage !== $this) {
                    DSS4_ECompliance.BO.DateTimeFormat.setApplicationLanguage(value, $this);
                }
            }
        };
        BO.ApplicationLanguage = ApplicationLanguage;
        var DateTimeFormat = (function () {
            function DateTimeFormat() {
                this._originalTypeClassName = "zAppDev.DotNet.Framework.Identity.Model.DateTimeFormat";
                this.Domain = DSS4_ECompliance.BO;
                this.ApplicationLanguage = new this.Domain.ApplicationLanguage();
                this['_key'] = this.Id = 0;
            }
            DateTimeFormat.IsNew = function ($this) {
                if ($this == null)
                    return true;
                return $this.Id == null || $this.Id == 0;
            };
            return DateTimeFormat;
        }());
        DateTimeFormat.setApplicationLanguage = function ($this, value) {
            var oldValue = $this.ApplicationLanguage;
            $this.ApplicationLanguage = value;
            if (value != null) {
                if (oldValue != null && oldValue.DateTimeFormat != null) {
                    oldValue.DateTimeFormat = null;
                }
                if ($this.ApplicationLanguage.DateTimeFormat !== $this) {
                    DSS4_ECompliance.BO.ApplicationLanguage.setDateTimeFormat(value, $this);
                }
            }
        };
        BO.DateTimeFormat = DateTimeFormat;
        var ApplicationTheme = (function () {
            function ApplicationTheme() {
                this._originalTypeClassName = "zAppDev.DotNet.Framework.Identity.Model.ApplicationTheme";
                this.Domain = DSS4_ECompliance.BO;
                this['_key'] = this.Id = 0;
            }
            ApplicationTheme.IsNew = function ($this) {
                if ($this == null)
                    return true;
                return $this.Id == null || $this.Id == 0;
            };
            return ApplicationTheme;
        }());
        BO.ApplicationTheme = ApplicationTheme;
        var FileData = (function () {
            function FileData() {
                this._originalTypeClassName = "DSS4_ECompliance.BO.FileData";
                this.Domain = DSS4_ECompliance.BO;
                this['_key'] = this.Id = "00000000-0000-0000-0000-000000000000";
            }
            FileData.IsNew = function ($this) {
                if ($this == null)
                    return true;
                return $this.Id == null || $this.Id == "00000000-0000-0000-0000-000000000000";
            };
            return FileData;
        }());
        BO.FileData = FileData;
        var StorageMedium;
        (function (StorageMedium) {
            StorageMedium[StorageMedium["FileSystem"] = 0] = "FileSystem";
            StorageMedium[StorageMedium["DataBase"] = 1] = "DataBase";
        })(StorageMedium = BO.StorageMedium || (BO.StorageMedium = {}));
        var AuditEntityConfiguration = (function () {
            function AuditEntityConfiguration() {
                this._originalTypeClassName = "zAppDev.DotNet.Framework.Auditing.Model.AuditEntityConfiguration";
                this.Domain = DSS4_ECompliance.BO;
                this.Properties = [];
                this['_key'] = this.Id = 0;
            }
            AuditEntityConfiguration.IsNew = function ($this) {
                if ($this == null)
                    return true;
                return $this.Id == null || $this.Id == 0;
            };
            return AuditEntityConfiguration;
        }());
        AuditEntityConfiguration.setProperties = function ($this, items) {
            if (items == null)
                items = [];
            if ($this.Properties == null)
                $this.Properties = [];
            var copyItems = Joove.Common.cloneObject(items);
            while ($this.Properties.length > 0) {
                DSS4_ECompliance.BO.AuditEntityConfiguration.removeProperties($this, $this.Properties[0]);
            }
            DSS4_ECompliance.BO.AuditEntityConfiguration.addManyProperties($this, copyItems);
        };
        AuditEntityConfiguration.addManyProperties = function ($this, items) {
            if (items == null)
                return;
            for (var i = 0; i < items.length; i++) {
                DSS4_ECompliance.BO.AuditEntityConfiguration.addProperties($this, items[i]);
            }
        };
        AuditEntityConfiguration.addProperties = function ($this, item) {
            if ($this.Properties == null)
                $this.Properties = [];
            if (item == null || $this.Properties.indexOf(item) > -1)
                return;
            $this.Properties.push(item);
            if (item.Entity != $this) {
                DSS4_ECompliance.BO.AuditPropertyConfiguration.setEntity(item, $this);
            }
        };
        AuditEntityConfiguration.addRangeProperties = function ($this, items) {
            items.forEach(function (item) { return DSS4_ECompliance.BO.AuditEntityConfiguration.addProperties($this, item); });
        };
        AuditEntityConfiguration.removeProperties = function ($this, item) {
            if ($this == null || $this.Properties == null || $this.Properties.indexOf(item) === -1)
                return;
            var _index = $this.Properties.indexOf(item);
            $this.Properties.splice(_index, 1);
            item.Entity = null;
        };
        AuditEntityConfiguration.clearProperties = function ($this) {
            $this.Properties = null;
        };
        BO.AuditEntityConfiguration = AuditEntityConfiguration;
        var AuditPropertyConfiguration = (function () {
            function AuditPropertyConfiguration() {
                this._originalTypeClassName = "zAppDev.DotNet.Framework.Auditing.Model.AuditPropertyConfiguration";
                this.Domain = DSS4_ECompliance.BO;
                this.Entity = new this.Domain.AuditEntityConfiguration();
                this['_key'] = this.Id = 0;
            }
            AuditPropertyConfiguration.IsNew = function ($this) {
                if ($this == null)
                    return true;
                return $this.Id == null || $this.Id == 0;
            };
            return AuditPropertyConfiguration;
        }());
        AuditPropertyConfiguration.setEntity = function ($this, value) {
            var oldValue = $this.Entity;
            $this.Entity = value;
            if (value != null) {
                if (oldValue != null) {
                    DSS4_ECompliance.BO.AuditEntityConfiguration.removeProperties(oldValue, $this);
                }
                DSS4_ECompliance.BO.AuditEntityConfiguration.addProperties(value, $this);
            }
        };
        BO.AuditPropertyConfiguration = AuditPropertyConfiguration;
        var AuditLogEntry = (function () {
            function AuditLogEntry() {
                this._originalTypeClassName = "zAppDev.DotNet.Framework.Auditing.Model.AuditLogEntry";
                this.Domain = DSS4_ECompliance.BO;
                this['_key'] = this.Id = 0;
            }
            AuditLogEntry.IsNew = function ($this) {
                if ($this == null)
                    return true;
                return $this.Id == null || $this.Id == 0;
            };
            return AuditLogEntry;
        }());
        BO.AuditLogEntry = AuditLogEntry;
        var AuditLogEntryType = (function () {
            function AuditLogEntryType() {
                this._originalTypeClassName = "zAppDev.DotNet.Framework.Auditing.Model.AuditLogEntryType";
                this.Domain = DSS4_ECompliance.BO;
                this['_key'] = this.Id = 0;
            }
            AuditLogEntryType.IsNew = function ($this) {
                if ($this == null)
                    return true;
                return $this.Id == null || $this.Id == 0;
            };
            return AuditLogEntryType;
        }());
        BO.AuditLogEntryType = AuditLogEntryType;
        var AuditLogPropertyActionType = (function () {
            function AuditLogPropertyActionType() {
                this._originalTypeClassName = "zAppDev.DotNet.Framework.Auditing.Model.AuditLogPropertyActionType";
                this.Domain = DSS4_ECompliance.BO;
                this['_key'] = this.Id = 0;
            }
            AuditLogPropertyActionType.IsNew = function ($this) {
                if ($this == null)
                    return true;
                return $this.Id == null || $this.Id == 0;
            };
            return AuditLogPropertyActionType;
        }());
        BO.AuditLogPropertyActionType = AuditLogPropertyActionType;
        var WorkflowStatus;
        (function (WorkflowStatus) {
            WorkflowStatus[WorkflowStatus["None"] = 0] = "None";
            WorkflowStatus[WorkflowStatus["Completed"] = 1] = "Completed";
            WorkflowStatus[WorkflowStatus["Pending"] = 2] = "Pending";
            WorkflowStatus[WorkflowStatus["Expired"] = 3] = "Expired";
            WorkflowStatus[WorkflowStatus["Cancelled"] = 4] = "Cancelled";
            WorkflowStatus[WorkflowStatus["Failed"] = 5] = "Failed";
            WorkflowStatus[WorkflowStatus["StepToContinueNotFound"] = 6] = "StepToContinueNotFound";
        })(WorkflowStatus = BO.WorkflowStatus || (BO.WorkflowStatus = {}));
        var WorkflowExecutionResult = (function () {
            function WorkflowExecutionResult() {
                this._originalTypeClassName = "zAppDev.DotNet.Framework.Workflow.WorkflowExecutionResult";
                this.Domain = DSS4_ECompliance.BO;
                this['_key'] = this.WorkflowExecutionResultKey = 0;
            }
            WorkflowExecutionResult.IsNew = function ($this) {
                if ($this == null)
                    return true;
                return $this.WorkflowExecutionResultKey == null || $this.WorkflowExecutionResultKey == 0;
            };
            return WorkflowExecutionResult;
        }());
        WorkflowExecutionResult.setContext = function ($this, value) {
            var oldValue = $this.Context;
            $this.Context = value;
            if (value != null) {
                if (oldValue != null && oldValue.Result != null) {
                    oldValue.Result = null;
                }
                if ($this.Context.Result !== $this) {
                    DSS4_ECompliance.BO.WorkflowContextBase.setResult(value, $this);
                }
            }
        };
        BO.WorkflowExecutionResult = WorkflowExecutionResult;
        var WorkflowContextBase = (function () {
            function WorkflowContextBase() {
                this._originalTypeClassName = "zAppDev.DotNet.Framework.Workflow.WorkflowContextBase";
                this.Domain = DSS4_ECompliance.BO;
                this['_key'] = this.Id = "00000000-0000-0000-0000-000000000000";
            }
            WorkflowContextBase.IsNew = function ($this) {
                if ($this == null)
                    return true;
                return $this.Id == null || $this.Id == "00000000-0000-0000-0000-000000000000";
            };
            return WorkflowContextBase;
        }());
        WorkflowContextBase.setResult = function ($this, value) {
            var oldValue = $this.Result;
            $this.Result = value;
            if (value != null) {
                if (oldValue != null && oldValue.Context != null) {
                    oldValue.Context = null;
                }
                if ($this.Result.Context !== $this) {
                    DSS4_ECompliance.BO.WorkflowExecutionResult.setContext(value, $this);
                }
            }
        };
        BO.WorkflowContextBase = WorkflowContextBase;
        var WorkflowSchedule = (function () {
            function WorkflowSchedule() {
                this._originalTypeClassName = "zAppDev.DotNet.Framework.Workflow.WorkflowSchedule";
                this.Domain = DSS4_ECompliance.BO;
                this['_key'] = this.Workflow = "";
            }
            WorkflowSchedule.IsNew = function ($this) {
                if ($this == null)
                    return true;
                return $this.Workflow == null || $this.Workflow == "";
            };
            return WorkflowSchedule;
        }());
        BO.WorkflowSchedule = WorkflowSchedule;
    })(BO = DSS4_ECompliance.BO || (DSS4_ECompliance.BO = {}));
})(DSS4_ECompliance || (DSS4_ECompliance = {}));
var _appDomain = DSS4_ECompliance.BO;
window.$domain = _appDomain;
